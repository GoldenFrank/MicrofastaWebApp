// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Matches users with suitable MFI institutions based on loan application details.
 *
 * - matchMfiInstitutions - A function that matches users with MFI institutions.
 * - MfiMatchingInput - The input type for the matchMfiInstitutions function.
 * - MfiMatchingOutput - The return type for the matchMfiInstitutions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MfiMatchingInputSchema = z.object({
  logbookDetails: z
    .string()
    .describe('Details of the logbook being used as collateral.'),
  nationalId: z.string().describe('National ID number of the loan applicant.'),
  loanAmount: z.number().describe('The amount of loan requested by the applicant.'),
  creditScore: z.number().describe('The credit score of the loan applicant, if available.'),
  employmentStatus: z.string().describe('Employment status of the loan applicant.'),
  location: z.string().describe('The location of the loan applicant.'),
});
export type MfiMatchingInput = z.infer<typeof MfiMatchingInputSchema>;

const MfiInstitutionSchema = z.object({
  name: z.string().describe('Name of the MFI institution.'),
  interestRate: z.number().describe('Interest rate offered by the MFI institution.'),
  processingTime: z.string().describe('Typical loan processing time.'),
  requirements: z.array(z.string()).describe('List of requirements for loan application.'),
  contactInformation: z.string().describe('Contact details for the MFI institution.'),
  approvalRate: z.number().describe('Historical loan approval rate as a percentage'),
  loanTerms: z.string().describe('Summary of key loan terms and conditions')
});

const MfiMatchingOutputSchema = z.array(MfiInstitutionSchema).describe('A list of suitable MFI institutions.');
export type MfiMatchingOutput = z.infer<typeof MfiMatchingOutputSchema>;

export async function matchMfiInstitutions(input: MfiMatchingInput): Promise<MfiMatchingOutput> {
  return matchMfiInstitutionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'mfiMatchingPrompt',
  input: {
    schema: MfiMatchingInputSchema,
  },
  output: {
    schema: MfiMatchingOutputSchema,
  },
  prompt: `You are an expert financial advisor specializing in logbook loans in East Africa. Based on the loan application details, identify the 3 most suitable MFI institutions.

Consider factors such as loan amount, applicant's logbook details, credit score, employment status, and location, as well as the MFI's interest rates, processing times, and requirements. Use example MFIs as a guide to output the list, but do NOT limit the list to these MFIs, and find MFIs applicable to the user's logbook details, credit score, employment status and location.

Example MFIs:
```json
[
  {
    "name": "Faulu Kenya",
    "interestRate": 13.5,
    "processingTime": "3-5 business days",
    "requirements": ["National ID", "Logbook", "KRA Pin", "6 months bank statement"],
    "contactInformation": "+254 711 074 074",
    "approvalRate": 0.85,
    "loanTerms": "Logbook must be comprehensively insured."
  },
  {
    "name": "Platinum Credit",
    "interestRate": 15.0,
    "processingTime": "1-3 business days",
    "requirements": ["National ID", "Logbook", "KRA Pin", "Comprehensive Insurance"],
    "contactInformation": "+254 709 777 000",
    "approvalRate": 0.75,
    "loanTerms": "Maximum loan tenure of 36 months."
  }
]
```

Applicant Details:
- Logbook Details: {{{logbookDetails}}}
- National ID: {{{nationalId}}}
- Loan Amount: {{{loanAmount}}}
- Credit Score: {{{creditScore}}}
- Employment Status: {{{employmentStatus}}}
- Location: {{{location}}}


Return a JSON array of MFI institutions, formatted as in the example above.
`,
});

const matchMfiInstitutionsFlow = ai.defineFlow(
  {
    name: 'matchMfiInstitutionsFlow',
    inputSchema: MfiMatchingInputSchema,
    outputSchema: MfiMatchingOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
